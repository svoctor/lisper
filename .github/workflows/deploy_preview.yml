# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Build Rust lib
  build:
    name: Build Rust lib
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          target_url: ${{ steps.deployment-preview.outputs.preview-url }}
          environment: Preview
          ref: ${{ github.head_ref }}
          
      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build Rust lib
        uses: actions-rs/cargo@v1
        with:
          command: build
    
      # Test Rust lib
      - name: Test Rust lib
        uses: actions-rs/cargo@v1
        with:
          command: test
    
    # Build WASM module
      - uses: jetli/wasm-pack-action@v0.3.0
      - name: Build WASM module
        run: |
          cd wasm/
          wasm-pack build --out-dir ../lisper-web/pkg/ --target bundler
    
    # Deploy preview build    
      - name: Deploy preview build
        uses: amondnet/vercel-action@v20
        id: deployment-preview
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.PROJECT_ID}}
          working-directory: ./lisper-web/


      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: ${{ steps.deployment-preview.outputs.preview-url }}
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: ${{ steps.deployment-preview.outputs.preview-url }}
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
